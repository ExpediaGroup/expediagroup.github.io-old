{"version":3,"sources":["webpack:///../gatsby-theme-github-portal/src/pages/projects.jsx"],"names":["ProjectListings","_ref","data","title","site","siteMetadata","coverImage","childImageSharp","fluid","projectRepos","githubData","html","pageDescription","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_layouts__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","a","_components__WEBPACK_IMPORTED_MODULE_4__","cover","_index__WEBPACK_IMPORTED_MODULE_6__","dangerouslySetInnerHTML","__html","style","width","map","node","key","id","imageUrl","path","url","name","excerpt","description","isExternal","containImgWidth","query"],"mappings":"0MAuCeA,UA9BS,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAClBC,EAAUD,EAAKE,KAAKC,aAApBF,MACFG,EAAaJ,EAAKI,WAAWC,gBAAgBC,MAC3CC,EAAiBP,EAAKQ,WAAWR,KAAjCO,aACAE,EAAST,EAAKU,gBAAdD,KAER,OACCE,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACCF,OAAAC,EAAA,EAAAD,CAACG,EAAAC,EAAD,CAAQd,MAAUA,EAAL,cACbU,OAAAC,EAAA,EAAAD,CAACK,EAAA,EAAD,CAAQf,MAAUA,EAAL,YAAuBgB,MAAOb,IAC3CO,OAAAC,EAAA,EAAAD,CAACO,EAAA,eAAD,KACCP,OAAAC,EAAA,EAAAD,CAAA,WAASQ,wBAAyB,CAAEC,OAAQX,KAC5CE,OAAAC,EAAA,EAAAD,CAACK,EAAA,EAAD,CAAiBK,MAAO,CAAEC,MAAO,SAC/Bf,EAAagB,IAAI,SAAAC,GAAI,OACrBb,OAAAC,EAAA,EAAAD,CAACK,EAAA,EAAD,CACCS,IAAKD,EAAKE,GACVT,MAAOO,EAAKG,SACZC,KAAMJ,EAAKK,IACX5B,MAAOuB,EAAKM,KACZC,QAASP,EAAKQ,YACdC,YAAY,EACZC,iBAAiB,UA8CjB,IAAMC,EAAK","file":"component---gatsby-theme-github-portal-src-pages-projects-jsx-d73958162310db0670aa.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport { Header } from '../components';\nimport { Layout } from '../layouts';\nimport PropTypes from 'prop-types';\nimport { CardListItem, CardListWrapper } from '../components';\nimport { ContentWrapper } from './index';\n\nconst ProjectListings = ({ data }) => {\n\tconst { title } = data.site.siteMetadata;\n\tconst coverImage = data.coverImage.childImageSharp.fluid;\n\tconst { projectRepos } = data.githubData.data;\n\tconst { html } = data.pageDescription;\n\n\treturn (\n\t\t<Layout>\n\t\t\t<Helmet title={`${title} Projects`} />\n\t\t\t<Header title={`${title} Projects`} cover={coverImage} />\n\t\t\t<ContentWrapper>\n\t\t\t\t<section dangerouslySetInnerHTML={{ __html: html }} />\n\t\t\t\t<CardListWrapper style={{ width: '100%' }}>\n\t\t\t\t\t{projectRepos.map(node => (\n\t\t\t\t\t\t<CardListItem\n\t\t\t\t\t\t\tkey={node.id}\n\t\t\t\t\t\t\tcover={node.imageUrl}\n\t\t\t\t\t\t\tpath={node.url}\n\t\t\t\t\t\t\ttitle={node.name}\n\t\t\t\t\t\t\texcerpt={node.description}\n\t\t\t\t\t\t\tisExternal={true}\n\t\t\t\t\t\t\tcontainImgWidth={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</CardListWrapper>\n\t\t\t</ContentWrapper>\n\t\t</Layout>\n\t);\n};\n\nexport default ProjectListings;\n\nProjectListings.propTypes = {\n\tdata: PropTypes.shape({\n\t\tgithubData: PropTypes.shape({\n\t\t\tdata: PropTypes.shape({\n\t\t\t\tnodes: PropTypes.arrayOf(\n\t\t\t\t\tPropTypes.shape({\n\t\t\t\t\t\tid: PropTypes.string,\n\t\t\t\t\t\tname: PropTypes.string,\n\t\t\t\t\t\turl: PropTypes.string,\n\t\t\t\t\t\tupdatedAt: PropTypes.string,\n\t\t\t\t\t\tdescription: PropTypes.string,\n\t\t\t\t\t\timageUrl: PropTypes.object,\n\t\t\t\t\t\tstargazers: PropTypes.shape({\n\t\t\t\t\t\t\ttotalCount: PropTypes.number,\n\t\t\t\t\t\t}),\n\t\t\t\t\t}).isRequired\n\t\t\t\t),\n\t\t\t}),\n\t\t}),\n\t\tsite: PropTypes.shape({\n\t\t\tsiteMetadata: PropTypes.shape({\n\t\t\t\ttitle: PropTypes.string,\n\t\t\t}),\n\t\t}),\n\t\tcoverImage: PropTypes.shape({\n\t\t\tchildImageSharp: PropTypes.shape({\n\t\t\t\tfluid: PropTypes.object,\n\t\t\t}),\n\t\t}),\n\t\tpageDescription: PropTypes.shape({\n\t\t\thtml: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport const query = graphql`\n\tquery {\n\t\tgithubData {\n\t\t\tdata {\n\t\t\t\tprojectRepos {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\turl\n\t\t\t\t\tupdatedAt\n\t\t\t\t\tdescription\n\t\t\t\t\tforkCount\n\t\t\t\t\tname\n\t\t\t\t\timageUrl {\n\t\t\t\t\t\t...CardListImageFluid\n\t\t\t\t\t\textension\n\t\t\t\t\t\tpublicURL\n\t\t\t\t\t}\n\t\t\t\t\tstargazers {\n\t\t\t\t\t\ttotalCount\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tpageDescription: markdownRemark(\n\t\t\tfrontmatter: { type: { eq: \"pageDescription\" }, page: { eq: \"projects\" } }\n\t\t) {\n\t\t\thtml\n\t\t}\n\t\tcoverImage: file(relativePath: { eq: \"valley-header.jpg\" }) {\n\t\t\t...HeaderImageFluid\n\t\t}\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\t}\n`;\n"],"sourceRoot":""}